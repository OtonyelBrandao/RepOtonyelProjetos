@using SistemaBasico001.Models
@model SistemaBasico001.Models.alunos

@{
    SistemaBasico001Entities db = new SistemaBasico001Entities();
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutModal.cshtml";
    IQueryable<Alunos_Materias> AM = db.Alunos_Materias.Where(n => n.alunos.Matricula == Model.Matricula);
    string Nascimento = string.Format("{0:dd/MM/yyyy}", Model.Nascimento);
}

<div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title">@Model.Nome</h4>
        </div>
        <div class="modal-body">
            <hr />
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.Matricula)</dt>
                <dd>@Html.DisplayFor(model => model.Matricula)</dd>
                <dt>@Html.DisplayNameFor(model => model.Nascimento)</dt>
                <dd>@Html.DisplayFor(model => Nascimento)</dd>
                <dt>@Html.DisplayNameFor(model => model.Email)</dt>
                <dd>@Html.DisplayFor(model => model.Email)</dd>
            </dl>
            <div class="body-content">
                <form action="~/notas/Create" method="post">
                    <table class="table table-bordered" Data-value="@Model.Matricula" name="IDAluno">
                        <tr>
                            <th class="text-center">
                                Materias
                            </th>
                        </tr>
                        @foreach (var item in AM)
                        {
                            <tr class=" l" data-value="@item.materias.IdMateria" name="IDMateria">

                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.materias.Nome)
                                </td>
                                <td class="nota" ></td>
                                <td class="nota" ></td>
                                <td class="nota" ></td>
                                <td class="nota" ></td>
                                @*@foreach(){
                                        <td class="item"></td>
                                    }*@
                            </tr>
                        }
                    </table>
                    <button type="submit" class="btn btn-success" data-dismiss="modal">Salvar</button>
                </form>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>

        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
@section scripts{
    <script>
        $(function () {
            $("td").dblclick(function () {
                var conteudoOriginal = $(this).text();

                $(this).addClass("celulaEmEdicao");
                $(this).html("<input type='number' name='nota' value='" + conteudoOriginal + "' />");
                $(this).children().first().focus();

                $(this).children().first().keypress(function (e) {
                    if (e.which == 13) {
                        var novoConteudo = $(this).val();
                        $(this).parent().text(novoConteudo);
                        $(this).parent().removeClass("celulaEmEdicao");
                    }
                });

                $(this).children().first().blur(function () {
                    $(this).parent().text(conteudoOriginal);
                    $(this).parent().removeClass("celulaEmEdicao");
                });
            });
        });
        $("#btn-enviar").click(function(){
  var ListaDenotas = [];

  // Varrendo todos os itens inseridos (olha a vassoura!)
  $('.item').each(function() {

    // Montando objeto que possui as mesmas propriedades do objeto C# do Controller.
    var entidade_nota = {
      IDMateria : $(this).children()[0].innerText,
      IDTurma : $(this).children()[1].innerText,
      IDAluno : @Model.Matricula,
      Nota: $(".nota").children()[3].innerText,
      
    };

    // Adicionando objeto a lista.
    ListaDenotas.push(entidade_nota);
  });

  // Após validações, chame a função que possui o Ajax para enviar a lista obtida.
            enviarDados(ListaDenotas);
});
// Sua função enviarDados ficaria semelhante a essa:

        function enviarDados(ListaDenotas){
   $.ajax({
      method: "POST",
      url: '@Url.Action("Create","notas")',
       data: JSON.stringify(ListaDenotas)
   });
}
    </script>
}
